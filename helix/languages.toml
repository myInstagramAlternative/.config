# python
[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
config = {}

[language-server.ruff]
command = "ruff-lsp"
config = { settings = { args = ["--extend-select", "I,RUF"] } }

[[language]]
name = "python"
language-servers = ["pyright", "ruff"]
auto-format = true
formatter = {command = 'black', args = ["--quiet", "-"]}

# trying to get pyright to work
scope = "source.python"
injection-regex = "python"
file-types = ["py","pyi","py3","pyw","ptl",".pythonstartup",".pythonrc","SConstruct"]
shebangs = ["python"]
roots = ["setup.py", "setup.cfg", "pyproject.toml"]
comment-token = "#"
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "tsx"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "jsx"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

# [language.config.typescript]
[language-server.typescript-language-server.config]
config = { format = { "semicolons" = "insert", "insertSpaceBeforeFunctionParenthesis" = true }}
# tsdk = "~/.npm-global/lib/node_modules/typescript/lib"   #this might be different for you, I found it with locate command

#npm i -g typescript typescript-language-server vscode-langservers-extracted vscode-languageserver-types

[[language]]
name = "rust"

[language.debugger]
name = "lldb-vscode"
transport = "stdio"
command = "lldb-vscode"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
args = { program = "{0}", initCommands = [ "command script import /usr/local/etc/lldb_vscode_rustc_primer.py" ] }

[language-server.rust-analyzer]
config = { check = { command = "clippy" } }

[[language]]
name = "c-sharp"
language-servers = [ "OmniSharp" ]
[language-server.OmniSharp]
command = "dotnet"
args = [ "/Users/fam/.omnisharp/OmniSharp.dll", "--languageserver" ] 
